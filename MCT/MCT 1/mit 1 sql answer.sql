-- MIT - 2 SQL (23-30-2024 SATURDAY)

-- ANSWER ALL OF THE FOLLOWING QUESTION :
-- AFTER THE END OF EVERY CODE PLEASE DO COMMENT ON YOUR QUERY

-- 01. CREATE A TABLE NAMED LIBRARY WHITH 5 RECORDS AND ATTRIBUTES ONLY WITH THE SPECIFIED DATA TYPE  ALONG WITH THIER CONSTRAINTS.

-- BOOK_ID INT
-- BOOK_NAME VARCHAR
-- AUTHOR_NAME VARCHAR
-- DATE_OF_PUBLISH DATE
-- PRICE INT

-- a. THE DATE OF PUBLISH SHOULD NOT BE AFTER 2020-01-10.
-- b. THE PRICE SHOULD BE KEPT IN 350 IF NO VALUES ARE ENTRED.
-- c. ADD A NEW COLUMN CALLED GENRE WITH ITS DATA TYPE.
-- d. UPDATE YOUR AUTHOR NAME FROM EXISITING TO TAGORE.
use ajin;
CREATE TABLE Library (
    BOOK_ID INT PRIMARY KEY,
    BOOK_NAME VARCHAR(100),
    AUTHOR_NAME VARCHAR(100),
    DATE_OF_PUBLISH DATE,
    PRICE INT
);

insert into library(BOOK_ID,BOOK_NAME,AUTHOR_NAME,DATE_OF_PUBLISH,PRICE)
values(1,'Harry Potter','Williamson','1998-07-25',1500),
	  (2,'Gullivers','smith','1995-08-11',7800),
      (3,'Willy Wonka','Stevenson','1978-11-21',1500),
      (4,'game of thrones','Enrique','1985-01-31',8000);
select * from library;
#a
ALTER TABLE Library
ADD CONSTRAINT chk_date_of_publish CHECK (DATE_OF_PUBLISH <= '2020-01-10');

#b
ALTER TABLE library
ALTER COLUMN PRICE SET DEFAULT 350;

#c
ALTER TABLE library
ADD COLUMN GENRE VARCHAR(50);

#d
UPDATE library
SET AUTHOR_NAME = 'Tagore'
WHERE AUTHOR_NAME = 'Williamson';



-- 02. WRITE A QUERY TO FIND THE DISTINCT COUNT OF THE VENDOR_ID IN THE VENDOR_INVENTORY TABLE.
select * from vendor_inventory;
SELECT COUNT(DISTINCT VENDOR_ID) AS DISTINCT_VENDOR_COUNT
FROM VENDOR_INVENTORY;



-- 03. FIND THE TOTAL_PRICE OF THE VENDOR_INVENTORY TABLE AND SHOW THE HIGHEST 20 RESULTS.
use farmer_set;
SELECT (quantity*original_price) AS TOTAL_PRICE
FROM vendor_inventory
ORDER BY TOTAL_PRICE DESC
LIMIT 20;



-- 04. FILTER OUT ALL THE RECORDS WHOSE VENDOR_OWNER_FIRST_NAME THAT HAS 'A' AT THE SECOND POSITION
SELECT * FROM vendor WHERE VENDOR_OWNER_FIRST_NAME LIKE '_A%';


-- 05. WHAT IS THE AVERAGE TOTAL_AMT SPENT PER PURCHASE BY EACH CUSTOMER,VENDOR,QUANTITY, COST_CUSTOMER_PER_QTY COMBINATION,WHERE THE AVERAGE TOTAL_AMT EXCEEDS 20 
--     PROVIDE THE CUSTOMER_ID, VENDOR_ID, QUANTITY, COST_CUSTOMER_PER_QTY FOR EACH RECORD.
select * from customer_purchases;
SELECT 
    CUSTOMER_ID,
    VENDOR_ID,
    QUANTITY,
    COST_TO_CUSTOMER_PER_QTY,
    AVG(quantity*cost_to_customer_per_qty) AS AVERAGE_TOTAL_AMT
FROM 
    customer_purchases
GROUP BY 
    CUSTOMER_ID,
    VENDOR_ID,
    QUANTITY,
    COST_TO_CUSTOMER_PER_QTY
having AVERAGE_TOTAL_AMT > 20;


